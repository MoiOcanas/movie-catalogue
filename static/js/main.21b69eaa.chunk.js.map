{"version":3,"sources":["components/layout/Navbar.jsx","mainResponsive.js","responsive.js","components/movies/MovieItem.jsx","store/actions/dispatchers.js","store/actions/actionTypes.js","store/actions/moviesActions.js","components/movies/PopularMoviesList.jsx","components/movies/TopMoviesList.jsx","components/movies/UpcomingMoviesList.jsx","components/layout/Homepage.jsx","components/movies/MovieReviewItem.jsx","components/movies/MovieReviewsList.jsx","components/movies/MovieDetails.jsx","components/search/SearchMovie.jsx","App.js","store/reducers/moviesReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","useState","expanded","setExpanded","buttonDisplayed","setbuttonDisplayed","handleClick","expandedClass","buttonDisplayedClass","className","to","id","aria-hidden","onClick","mainResponsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","responsive","styles","textAlign","MovieItem","movie","style","src","poster_path","alt","title","getPopularMoviesSuccess","popularMovies","type","payload","getMovieSuccess","getTopMoviesSuccess","topMovies","getUpcomingMoviesSuccess","upcomingMovies","url","apiKey","PopularMoviesList","componentDidMount","props","getPopularMovies","this","showDots","sliderClass","swipeable","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","slidesToSlide","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","map","key","Component","connect","state","movies","dispatch","a","async","axios","get","then","res","data","results","catch","err","console","log","TopMoviesList","getTopMovies","UpcomingMoviesList","getUpcomingMovies","Homepage","getMovies","setState","width","backdrop_path","overview","MovieReviewItem","review","content","author","MovieReviewsList","movieReviews","MovieDetails","window","scrollTo","match","params","getMovie","getMovieReviews","ref","scrollRef","vote_average","runtime","production_companies","p","i","name","genres","genre","moviesReviews","SearchMovie","resultMovies","searchInputText","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","placeholder","onChange","App","exact","path","component","initState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21b69eaa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [buttonDisplayed, setbuttonDisplayed] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setExpanded(!expanded);\r\n        setbuttonDisplayed(!buttonDisplayed);\r\n    }\r\n\r\n    const expandedClass = expanded ? 'mobile-nav' : null;\r\n    const buttonDisplayedClass = buttonDisplayed ? 'is-active' : null;\r\n\r\n    return (\r\n        <div className=\"nav-wrapper\">\r\n            <div className=\"grad-bar\"></div>\r\n            <nav className=\"navbar\">\r\n                <Link to=\"/\">\r\n                    <span id=\"app-brand\">MOVIE APP</span>\r\n                    <i className=\"fa fa-ticket\" aria-hidden=\"true\"></i>\r\n                </Link>\r\n                <div className={`menu-toggle ${buttonDisplayedClass}`} onClick={handleClick} id=\"mobile-menu\">\r\n                    <span className=\"bar\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    <span className=\"bar\"></span>\r\n                </div>\r\n                <ul className={`nav ${expandedClass} no-search`}>\r\n                    <li className=\"nav-item\" onClick={handleClick}><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"nav-item\" onClick={handleClick}><Link to=\"/about\">About</Link></li>\r\n                    <li className=\"nav-item\" onClick={handleClick}><Link to=\"/search\">Search</Link></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const mainResponsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 1025 },\r\n      items: 1\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 1024, min: 769},\r\n      items: 1\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 768, min: 464 },\r\n      items: 1\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };","export const responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 1025 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 1024, min: 769},\r\n      items: 4\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 768, min: 464 },\r\n      items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nlet imgURL = 'https://image.tmdb.org/t/p/w500';\r\n//cherry blossom - acidbrain\r\n\r\nconst styles = {\r\n    textAlign: 'center'\r\n}\r\n\r\nconst MovieItem = ({ movie }) => {\r\n    return (\r\n        <div style={styles}>\r\n            <Link to={`/movie/${movie.id}`}>\r\n                <img className=\"carousel-image\" src={imgURL + movie.poster_path} alt={movie.title} />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieItem;","import {\r\n    GET_POPULAR_MOVIES,\r\n    GET_TOP_MOVIES,\r\n    GET_MOVIE,\r\n    GET_MOVIE_REVIEWS,\r\n    GET_UPCOMING_MOVIES\r\n} from \"./actionTypes\";\r\n\r\nexport const getPopularMoviesSuccess = popularMovies => {\r\n    return {\r\n        type: GET_POPULAR_MOVIES,\r\n        payload: {\r\n            popularMovies\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMovieSuccess = movie => {\r\n    return {\r\n        type: GET_MOVIE,\r\n        payload: {\r\n           movie\r\n        }\r\n    };\r\n};\r\n\r\nexport const getTopMoviesSuccess = topMovies => {\r\n    return {\r\n        type: GET_TOP_MOVIES,\r\n        payload: {\r\n            topMovies\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMoviesReviewsSuccess = movieReviews => {\r\n    return {\r\n        type: GET_MOVIE_REVIEWS,\r\n        payload: {\r\n            movieReviews\r\n        }\r\n    };\r\n};\r\n\r\nexport const getUpcomingMoviesSuccess = upcomingMovies => {\r\n    return {\r\n        type: GET_UPCOMING_MOVIES,\r\n        payload: {\r\n            upcomingMovies\r\n        }\r\n    };\r\n};","export const GET_POPULAR_MOVIES = \"GET_MOVIES\";\r\nexport const GET_TOP_MOVIES = \"GET_TOP_MOVIES\";\r\nexport const GET_MOVIE =  \"GET_MOVIE\";\r\nexport const GET_UPCOMING_MOVIES = \"GET_UPCOMING_MOVIES\";\r\nexport const GET_MOVIE_REVIEWS = \"GET_MOVIE_REVIEWS\";","import axios from 'axios';\r\nimport { \r\n    getPopularMoviesSuccess,\r\n    getMovieSuccess,\r\n    getTopMoviesSuccess,\r\n    getUpcomingMoviesSuccess,\r\n    getMoviesReviewsSuccess\r\n } from './dispatchers';\r\n\r\nconst url = \"https://api.themoviedb.org/3/movie/\";\r\nconst apiKey = '26b6f99577e56d992ffe47051578e1ac';\r\n\r\nexport const getPopularMovies = () => {\r\n    return async dispatch => {\r\n       await axios.get(`${url}popular?api_key=${apiKey}&language=en-US&page=1`)\r\n            .then(res => {\r\n                let popularMovies = res.data.results;\r\n                dispatch(getPopularMoviesSuccess(popularMovies));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};\r\n\r\nexport const getTopMovies = () => {\r\n    return async dispatch => {\r\n       await axios.get(`${url}top_rated?api_key=${apiKey}&language=en-US&page=1`)\r\n            .then(res => {\r\n                let topMovies = res.data.results;\r\n                dispatch(getTopMoviesSuccess(topMovies));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n    return async dispatch => {\r\n       await axios.get(`${url}upcoming?api_key=${apiKey}&language=en-US&page=1`)\r\n            .then(res => {\r\n                let upcomingMovies = res.data.results;\r\n                dispatch(getUpcomingMoviesSuccess(upcomingMovies));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};\r\n\r\nexport const getMovie = id => {\r\n    return async dispatch => {\r\n       await axios.get(`${url}${id}?api_key=${apiKey}&language=en-US`)\r\n            .then(res => {\r\n                let movie = res.data;\r\n                dispatch(getMovieSuccess(movie));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};\r\n\r\nexport const getMovieReviews = id => {\r\n    return async dispatch => {\r\n       await axios.get(`${url}${id}/reviews?api_key=${apiKey}&language=en-US&page=1`)\r\n            .then(res => {\r\n                let moviesReviews = res.data.results;\r\n                dispatch(getMoviesReviewsSuccess(moviesReviews));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { responsive } from '../../responsive';\r\n\r\n//Components\r\nimport MovieItem from './MovieItem';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getPopularMovies } from '../../store/actions/moviesActions';\r\n\r\nclass PopularMoviesList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getPopularMovies();\r\n    }\r\n\r\n    render() {\r\n        const { popularMovies } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h2><b>Popular Movies</b></h2>\r\n                <Carousel\r\n                    showDots={false}\r\n                    sliderClass=\"\"\r\n                    swipeable\r\n                    responsive={responsive}\r\n                    additionalTransfrom={0}\r\n                    arrows\r\n                    autoPlaySpeed={3000}\r\n                    centerMode={false}\r\n                    className=\"\"\r\n                    containerClass=\"container-with-dots\"\r\n                    dotListClass=\"\"\r\n                    draggable\r\n                    focusOnSelect={false}\r\n                    infinite\r\n                    itemClass=\"\"\r\n                    slidesToSlide={1}\r\n                    keyBoardControl\r\n                    minimumTouchDrag={80}\r\n                    renderButtonGroupOutside={false}\r\n                    renderDotsOutside={false}\r\n                >\r\n                    {popularMovies && popularMovies.map(movie => {\r\n                        return (\r\n                            <MovieItem key={movie.id} movie={movie} />\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { popularMovies } = state.movies;\r\n    return {\r\n        popularMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getPopularMovies })(PopularMoviesList);","import React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { responsive } from '../../responsive';\r\n\r\n//Components\r\nimport MovieItem from './MovieItem';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getTopMovies } from '../../store/actions/moviesActions';\r\n\r\nclass TopMoviesList extends Component {\r\n    componentDidMount = () => {\r\n        this.props.getTopMovies();\r\n    }\r\n\r\n    render() {\r\n        const { topMovies } = this.props;\r\n        return (\r\n            <div>\r\n                <h2><b>Top Ranked Movies</b></h2>\r\n                <Carousel\r\n                    showDots={false}\r\n                    sliderClass=\"\"\r\n                    swipeable\r\n                    responsive={responsive}\r\n                    additionalTransfrom={0}\r\n                    arrows\r\n                    autoPlaySpeed={3000}\r\n                    centerMode={false}\r\n                    className=\"\"\r\n                    containerClass=\"container-with-dots\"\r\n                    dotListClass=\"\"\r\n                    draggable\r\n                    focusOnSelect={false}\r\n                    infinite\r\n                    itemClass=\"\"\r\n                    slidesToSlide={1}\r\n                    keyBoardControl\r\n                    minimumTouchDrag={80}\r\n                    renderButtonGroupOutside={false}\r\n                    renderDotsOutside={false}\r\n                >\r\n                    {topMovies && topMovies.map(movie => {\r\n                        return (\r\n                            <MovieItem key={movie.id} movie={movie} />\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { topMovies } = state.movies;\r\n    return {\r\n        topMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTopMovies })(TopMoviesList);","import React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { responsive } from '../../responsive';\r\n\r\n//Components\r\nimport MovieItem from './MovieItem';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getUpcomingMovies } from '../../store/actions/moviesActions';\r\n\r\nclass UpcomingMoviesList extends Component {\r\n    componentDidMount = () => {\r\n        this.props.getUpcomingMovies();\r\n    }\r\n\r\n    render() {\r\n        const { upcomingMovies } = this.props;\r\n        return (\r\n            <div>\r\n                <h2><b>Upcoming Movies</b></h2>\r\n                <Carousel\r\n                    showDots={false}\r\n                    sliderClass=\"\"\r\n                    swipeable\r\n                    responsive={responsive}\r\n                    additionalTransfrom={0}\r\n                    arrows\r\n                    autoPlaySpeed={3000}\r\n                    centerMode={false}\r\n                    className=\"\"\r\n                    containerClass=\"container-with-dots\"\r\n                    dotListClass=\"\"\r\n                    draggable\r\n                    focusOnSelect={false}\r\n                    infinite\r\n                    itemClass=\"\"\r\n                    slidesToSlide={1}\r\n                    keyBoardControl\r\n                    minimumTouchDrag={80}\r\n                    renderButtonGroupOutside={false}\r\n                    renderDotsOutside={false}\r\n                >\r\n                    {upcomingMovies && upcomingMovies.map(movie => {\r\n                        return (\r\n                            <MovieItem key={movie.id} movie={movie} />\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { upcomingMovies } = state.movies;\r\n    return {\r\n        upcomingMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUpcomingMovies })(UpcomingMoviesList);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { mainResponsive } from '../../mainResponsive';\r\n\r\n//Components\r\nimport PopularMovieList from '../movies/PopularMoviesList';\r\nimport TopMoviesList from '../movies/TopMoviesList';\r\nimport UpcomingMoviesList from '../movies/UpcomingMoviesList';\r\nlet imgURL = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass Homepage extends Component {\r\n\r\n    state = {\r\n        upcomingMovies: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies();\r\n    }\r\n\r\n    getMovies = () => {\r\n        let apiKey = '26b6f99577e56d992ffe47051578e1ac';\r\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`)\r\n            .then(res => {\r\n                this.setState({ upcomingMovies: res.data.results });\r\n                console.log(this.state.upcomingMovies)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { upcomingMovies } = this.state;\r\n        return (\r\n            <div className=\"main-carousel-container\">\r\n                <Carousel\r\n                    showDots={false}\r\n                    sliderClass=\"\"\r\n                    swipeable\r\n                    responsive={mainResponsive}\r\n                    additionalTransfrom={0}\r\n                    arrows\r\n                    autoPlaySpeed={3000}\r\n                    centerMode={false}\r\n                    className=\"\"\r\n                    containerClass=\"container-with-dots\"\r\n                    dotListClass=\"\"\r\n                    draggable\r\n                    focusOnSelect={false}\r\n                    infinite\r\n                    itemClass=\"\"\r\n                    slidesToSlide={1}\r\n                    keyBoardControl\r\n                    minimumTouchDrag={80}\r\n                    renderButtonGroupOutside={false}\r\n                    renderDotsOutside={false}\r\n                >\r\n                    {upcomingMovies && upcomingMovies.map(movie => {\r\n                        return (\r\n                            <div key={movie.id} className=\"main-element-container\">\r\n                                <img style={{ width: '100%' }} key={movie.id} alt={movie.title} src={imgURL + movie.backdrop_path} />\r\n                                <div className=\"top-right\">\r\n                                    <div className=\"top-right-container\">\r\n                                        <h1>{movie.title}</h1>\r\n                                        <p>{movie.overview}</p>\r\n                                        <div className=\"text-center\">\r\n                                            <Link to={`/movie/${movie.id}`}>\r\n                                                See details\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n                <div className=\"container main-container\">\r\n                    <PopularMovieList />\r\n                    <br />\r\n                    <TopMoviesList />\r\n                    <br />\r\n                    <UpcomingMoviesList />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\n\r\nconst MovieReviewItem = ({ review }) => {\r\n    return (\r\n        <div>\r\n            <p>{review.content}</p>\r\n            <small> - {review.author}</small>\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieReviewItem;","import React from 'react';\r\n\r\n//Components\r\nimport MovieReviewItem from './MovieReviewItem';\r\n\r\nconst MovieReviewsList = ({ movieReviews }) => {\r\n    console.log(movieReviews)\r\n    return (\r\n        <div className=\"review-container\" >\r\n            {movieReviews && (\r\n                <div>\r\n                    <h3>Reviews</h3>\r\n                    <div className=\"review-component\">\r\n                        {movieReviews ? movieReviews.map(review => {\r\n                            return (\r\n                                <div key={review.id}>\r\n                                    <MovieReviewItem review={review} />\r\n                                </div>\r\n                            )\r\n                        }) : null}\r\n                    </div>\r\n                </div>\r\n            ) \r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MovieReviewsList;","import React, { Component } from 'react';\r\n\r\n//delayde - north fell\r\n//Components\r\nimport MovieReviewsList from './MovieReviewsList';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getMovie, getMovieReviews } from '../../store/actions/moviesActions';\r\n\r\nlet imgURL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nclass MovieDetails extends Component {\r\n\r\n    componentDidMount = () => {\r\n        window.scrollTo(0, 0);\r\n        const id = this.props.match.params.id;\r\n        this.props.getMovie(id);\r\n        this.props.getMovieReviews(id);\r\n    }\r\n\r\n    render() {\r\n        const { movie, movieReviews } = this.props;\r\n\r\n        return (\r\n            <div className=\"container\" ref={this.scrollRef} >\r\n                <main className=\"movie-container\">\r\n                    <article className=\"movie-component is-centered\">\r\n                        <section className=\"pc-section-1\">\r\n                            <img src={imgURL + movie.poster_path} alt=\"alt\" />\r\n                        </section>\r\n                        <section className=\"pc-section-2\">\r\n                            <h2 className=\"pc-title\">{movie.title}</h2>\r\n                            <div className=\"pc-rating\">\r\n                                <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\r\n                                <span>{movie.vote_average}</span>\r\n                            </div>\r\n                            <p>{movie.overview}</p>\r\n                            <small>Duration: {movie.runtime + \"min\"}</small>\r\n                            <small>\r\n                                Production companies:\r\n                            {movie.production_companies && movie.production_companies.map((p, i) => {\r\n                                return (\r\n                                    <span key={i} className=\"badge badge-dark\">{p.name}</span>\r\n                                );\r\n                            })}\r\n                            </small>\r\n                            <small>\r\n                                Genres:\r\n                            {movie.genres && movie.genres.map((genre, i) => {\r\n                                return (\r\n                                    <span key={i} className=\"badge badge-dark\">{genre.name}</span>\r\n                                );\r\n                            })}\r\n                            </small>\r\n                        </section>\r\n                    </article>\r\n                </main>\r\n                <MovieReviewsList movieReviews={movieReviews} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { movie, movieReviews } = state.movies;\r\n    return {\r\n        movie,\r\n        movieReviews\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return ({\r\n        getMovie: id => { dispatch(getMovie(id)) },\r\n        getMovieReviews: id => { dispatch(getMovieReviews(id)) }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetails);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//Components\r\nimport MovieItem from '../movies/MovieItem';\r\n\r\nclass SearchMovie extends Component {\r\n\r\n    state = {\r\n        resultMovies: [],\r\n        searchInputText: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let apiKey = '26b6f99577e56d992ffe47051578e1ac';\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${this.state.searchInputText}&page=1&include_adult=false`)\r\n            .then(res => {\r\n                this.setState({ resultMovies: res.data.results });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { resultMovies } = this.state; \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <br />\r\n                    <h4>Search a movie</h4>\r\n                    <form onSubmit={ this.handleSubmit }>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"search-input-text\"\r\n                            name=\"searchInputText\"\r\n                            id=\"searchInputText\"\r\n                            placeholder=\"Search\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div className=\"search-result-container pt-4\">\r\n                    {\r\n                       resultMovies && resultMovies.map(movie => {\r\n                           return(\r\n                               <div className=\"search-result-item text-center\" key={movie.id}>\r\n                                   <MovieItem movie={movie} />\r\n                               </div>\r\n                           );\r\n                       })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchMovie;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n//Components\nimport Navbar from './components/layout/Navbar';\nimport Homepage from './components/layout/Homepage';\nimport MovieDetails from './components/movies/MovieDetails';\nimport SearchMovie from './components/search/SearchMovie';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/movie/:id\" component={MovieDetails}/>\n            <Route exact path=\"/search\" component={SearchMovie}/>\n          </Switch>\n      </div>\n\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { \r\n    GET_POPULAR_MOVIES,\r\n    GET_TOP_MOVIES,\r\n    GET_MOVIE,\r\n    GET_MOVIE_REVIEWS,\r\n    GET_UPCOMING_MOVIES\r\n} from '../actions/actionTypes';\r\n\r\n/* Initial state from store */\r\nconst initState = {\r\n    popularMovies: [],\r\n    topMovies: [],\r\n    upcomingMovies: [],\r\n    movieReviews: [],\r\n    movie: {}\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n        case GET_POPULAR_MOVIES:\r\n            return { ...state, popularMovies: action.payload.popularMovies }\r\n        case GET_TOP_MOVIES:\r\n            return { ...state, topMovies: action.payload.topMovies }\r\n        case GET_MOVIE:\r\n            return { ...state, movie: action.payload.movie }\r\n        case GET_UPCOMING_MOVIES:\r\n            return { ...state, upcomingMovies: action.payload.upcomingMovies }\r\n        case GET_MOVIE_REVIEWS:\r\n            return { ...state, movieReviews: action.payload.movieReviews }\r\n        /* Default return  */     \r\n        default:\r\n            return state;\r\n    }\r\n}","import moviesReducer from './moviesReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\n/* Main reducer, we can define a new one a put it here */\r\nconst rootReducer = combineReducers({\r\n    movies: moviesReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/_index.scss';\nimport App from './App';\n\n//Redux\nimport thunk from 'redux-thunk'; \nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}